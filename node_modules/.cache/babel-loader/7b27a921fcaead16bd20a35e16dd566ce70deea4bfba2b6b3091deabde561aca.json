{"ast":null,"code":"var _jsxFileName = \"/Users/yoko/GitHub-copilot-test/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\n\n//render form dynamically wih react hook form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const onSubmit = data => console.log(data);\n  const tableData = {\n    \"modal\": [{\n      \"section\": \"Beneficiary Name and Country\",\n      \"order\": 1,\n      \"components\": [{\n        \"key\": \"name\",\n        \"type\": \"textbox\",\n        \"label\": \"Beneficiary name\",\n        \"order\": 1,\n        \"rule\": {\n          \"required\": true,\n          \"maxLength\": 10\n        }\n      }, {\n        \"key\": \"country\",\n        \"type\": \"textbox\",\n        \"label\": \"Beneficiary Country\",\n        \"order\": 2,\n        \"rule\": {\n          \"required\": true,\n          \"maxLength\": 10\n        }\n      }]\n    }, {\n      \"section\": \"Mode of Receiving Payment\",\n      \"order\": 2,\n      \"components\": [{\n        \"key\": \"mode\",\n        \"type\": \"radio\",\n        \"label\": \"Mode of Payment\",\n        \"options\": [{\n          \"label\": \"Bank\",\n          \"value\": \"Bank\"\n        }, {\n          \"label\": \"other\",\n          \"value\": \"other\"\n        }],\n        \"order\": 1,\n        \"rule\": {\n          \"required\": true\n        }\n      }]\n    }, {\n      \"section\": \"Bank Account Details\",\n      \"components\": [{\n        \"key\": \"accountNum\",\n        \"type\": \"textbox\",\n        \"label\": \"Beneficiary Account Number\",\n        \"order\": 1,\n        \"rule\": {\n          \"required\": true,\n          \"maxLength\": 10\n        }\n      }, {\n        \"key\": \"bankRoutingCode\",\n        \"type\": \"textbox\",\n        \"label\": \"Beneficiary Bank Routing code\",\n        \"order\": 2,\n        \"rule\": {\n          \"required\": true,\n          \"maxLength\": 10\n        }\n      }, {\n        \"key\": \"address\",\n        \"type\": \"textbox\",\n        \"label\": \"Beneficiary Address\",\n        \"order\": 3\n      }]\n    }]\n  };\n  //validate form with react hook form\n  const validateForm = (rule, value) => {\n    if (rule.required && !value) {\n      return 'This field is required';\n    }\n    if (rule.maxLength && value.length > rule.maxLength) {\n      return 'This field is too long';\n    }\n    return true;\n  };\n  //render form dynamically with tableData\n  const renderForm = () => {\n    return tableData.modal.map((section, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: section.section\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), section.components.map((component, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: component.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), component.type === 'textbox' && /*#__PURE__*/_jsxDEV(\"input\", {\n              name: component.key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 66\n            }, this), errors[component.key] && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: errors[component.key].message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 59\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this);\n        })]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this);\n    });\n  };\n  //renderForm();\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [tableData.modal.map((section, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: section.section\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 25\n        }, this), section.components.map((component, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: component.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 37\n            }, this), component.type === \"textbox\" && /*#__PURE__*/_jsxDEV(\"input\", {\n              name: component.key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 70\n            }, this), component.type === \"radio\" && component.options.map((option, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: component.key,\n                  value: option.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: option.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 45\n              }, this);\n            })]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 33\n          }, this);\n        })]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"iyH731LTjAbxnbpM16EGorBPneQ=\", false, function () {\n  return [useForm];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useForm","jsxDEV","_jsxDEV","App","_s","register","handleSubmit","errors","onSubmit","data","console","log","tableData","validateForm","rule","value","required","maxLength","length","renderForm","modal","map","section","index","children","fileName","_jsxFileName","lineNumber","columnNumber","components","component","label","type","name","key","message","options","option","_c","$RefreshReg$"],"sources":["/Users/yoko/GitHub-copilot-test/src/App.js"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\n\n//render form dynamically wih react hook form\nexport default function App() {\n    const { register, handleSubmit, errors } = useForm();\n    const onSubmit = data => console.log(data);\n    const tableData = {\n        \"modal\": [\n          {\n            \"section\": \"Beneficiary Name and Country\",\n            \"order\": 1,\n            \"components\": [\n              {\n                \"key\": \"name\",\n                \"type\": \"textbox\",\n                \"label\": \"Beneficiary name\",\n                \"order\": 1,\n                \"rule\": {\n                  \"required\": true,\n                  \"maxLength\": 10\n                }\n              },\n              {\n                \"key\": \"country\",\n                \"type\": \"textbox\",\n                \"label\": \"Beneficiary Country\",\n                \"order\": 2,\n                \"rule\": {\n                  \"required\": true,\n                  \"maxLength\": 10\n                }\n              }\n            ]\n          },\n          {\n            \"section\": \"Mode of Receiving Payment\",\n            \"order\": 2,\n            \"components\": [\n              {\n                \"key\": \"mode\",\n                \"type\": \"radio\",\n                \"label\": \"Mode of Payment\",\n                \"options\": [\n                  {\n                    \"label\": \"Bank\",\n                    \"value\": \"Bank\"\n                  },\n                  {\n                    \"label\": \"other\",\n                    \"value\": \"other\"\n                  }\n                ],\n                \"order\": 1,\n                \"rule\": {\n                  \"required\": true\n                }\n              }\n            ]\n          },\n          {\n            \"section\": \"Bank Account Details\",\n            \"components\": [\n              {\n                \"key\": \"accountNum\",\n                \"type\": \"textbox\",\n                \"label\": \"Beneficiary Account Number\",\n                \"order\": 1,\n                \"rule\": {\n                  \"required\": true,\n                  \"maxLength\": 10\n                }\n              },\n              {\n                \"key\": \"bankRoutingCode\",\n                \"type\": \"textbox\",\n                \"label\": \"Beneficiary Bank Routing code\",\n                \"order\": 2,\n                \"rule\": {\n                  \"required\": true,\n                  \"maxLength\": 10\n                }\n              },\n              {\n                \"key\": \"address\",\n                \"type\": \"textbox\",\n                \"label\": \"Beneficiary Address\",\n                \"order\": 3\n              }\n            ]\n          }\n        ]\n      };\n    //validate form with react hook form\n    const validateForm = (rule, value) => {\n\n        if (rule.required && !value) {\n            return 'This field is required';\n        }\n        if (rule.maxLength && value.length > rule.maxLength) {\n            return 'This field is too long';\n        }\n        return true;\n    }\n    //render form dynamically with tableData\n    const renderForm = () => {\n        return tableData.modal.map((section, index) => {\n            return (\n                <div key={index}>\n                    <h3>{section.section}</h3>\n                    {section.components.map((component, index) => {\n                        return (\n                            <div key={index}>\n                                <label>{component.label}</label>\n                                {component.type === 'textbox' && <input name={component.key}  />}\n                                {/* {component.type === 'radio' && component.options.map((option, index) => {\n                                    return (\n                                        <div key={index}>\n                                            <input type=\"radio\" name={component.key} value={option.value} {...register(option.value, { validate: (value) => validateForm(component.rule, value) })} />\n                                            <label>{option.label}</label>\n                                        </div>\n                                    )\n                                })} */}\n                                {errors[component.key] && <p>{errors[component.key].message}</p>}\n                            </div>\n                        )\n                    })}\n                </div>\n            )\n        })\n    }\n    //renderForm();\n\n    return (    \n        <form onSubmit={handleSubmit(onSubmit)}>\n            {tableData.modal.map((section, index) => {\n                return (\n                    <div key={index}>\n                        <h2>{section.section}</h2>\n                        {section.components.map((component, index) => {\n                            return (\n                                <div key={index}>\n                                    <label>{component.label}</label>\n                                    {component.type === \"textbox\" && <input name={component.key} />}\n                                    {component.type === \"radio\" && component.options.map((option, index) => {\n                                        return (\n                                            <div key={index}>\n                                                <input type=\"radio\" name={component.key} value={option.value} />\n                                                <label>{option.label}</label>\n                                            </div>\n                                        )\n                                    })}\n                                    {/* {errors[component.key] && <p>{errors[component.key].message}</p>} */}\n                                </div>\n                            )\n                        })}\n                    </div>\n                )\n            }\n            )}\n            <input type=\"submit\" />\n        </form>\n    );\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM;IAAEC,QAAQ;IAAEC,YAAY;IAAEC;EAAO,CAAC,GAAGP,OAAO,CAAC,CAAC;EACpD,MAAMQ,QAAQ,GAAGC,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAC1C,MAAMG,SAAS,GAAG;IACd,OAAO,EAAE,CACP;MACE,SAAS,EAAE,8BAA8B;MACzC,OAAO,EAAE,CAAC;MACV,YAAY,EAAE,CACZ;QACE,KAAK,EAAE,MAAM;QACb,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,kBAAkB;QAC3B,OAAO,EAAE,CAAC;QACV,MAAM,EAAE;UACN,UAAU,EAAE,IAAI;UAChB,WAAW,EAAE;QACf;MACF,CAAC,EACD;QACE,KAAK,EAAE,SAAS;QAChB,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,qBAAqB;QAC9B,OAAO,EAAE,CAAC;QACV,MAAM,EAAE;UACN,UAAU,EAAE,IAAI;UAChB,WAAW,EAAE;QACf;MACF,CAAC;IAEL,CAAC,EACD;MACE,SAAS,EAAE,2BAA2B;MACtC,OAAO,EAAE,CAAC;MACV,YAAY,EAAE,CACZ;QACE,KAAK,EAAE,MAAM;QACb,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,iBAAiB;QAC1B,SAAS,EAAE,CACT;UACE,OAAO,EAAE,MAAM;UACf,OAAO,EAAE;QACX,CAAC,EACD;UACE,OAAO,EAAE,OAAO;UAChB,OAAO,EAAE;QACX,CAAC,CACF;QACD,OAAO,EAAE,CAAC;QACV,MAAM,EAAE;UACN,UAAU,EAAE;QACd;MACF,CAAC;IAEL,CAAC,EACD;MACE,SAAS,EAAE,sBAAsB;MACjC,YAAY,EAAE,CACZ;QACE,KAAK,EAAE,YAAY;QACnB,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,4BAA4B;QACrC,OAAO,EAAE,CAAC;QACV,MAAM,EAAE;UACN,UAAU,EAAE,IAAI;UAChB,WAAW,EAAE;QACf;MACF,CAAC,EACD;QACE,KAAK,EAAE,iBAAiB;QACxB,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,+BAA+B;QACxC,OAAO,EAAE,CAAC;QACV,MAAM,EAAE;UACN,UAAU,EAAE,IAAI;UAChB,WAAW,EAAE;QACf;MACF,CAAC,EACD;QACE,KAAK,EAAE,SAAS;QAChB,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,qBAAqB;QAC9B,OAAO,EAAE;MACX,CAAC;IAEL,CAAC;EAEL,CAAC;EACH;EACA,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IAElC,IAAID,IAAI,CAACE,QAAQ,IAAI,CAACD,KAAK,EAAE;MACzB,OAAO,wBAAwB;IACnC;IACA,IAAID,IAAI,CAACG,SAAS,IAAIF,KAAK,CAACG,MAAM,GAAGJ,IAAI,CAACG,SAAS,EAAE;MACjD,OAAO,wBAAwB;IACnC;IACA,OAAO,IAAI;EACf,CAAC;EACD;EACA,MAAME,UAAU,GAAGA,CAAA,KAAM;IACrB,OAAOP,SAAS,CAACQ,KAAK,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;MAC3C,oBACIrB,OAAA;QAAAsB,QAAA,gBACItB,OAAA;UAAAsB,QAAA,EAAKF,OAAO,CAACA;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACzBN,OAAO,CAACO,UAAU,CAACR,GAAG,CAAC,CAACS,SAAS,EAAEP,KAAK,KAAK;UAC1C,oBACIrB,OAAA;YAAAsB,QAAA,gBACItB,OAAA;cAAAsB,QAAA,EAAQM,SAAS,CAACC;YAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC/BE,SAAS,CAACE,IAAI,KAAK,SAAS,iBAAI9B,OAAA;cAAO+B,IAAI,EAAEH,SAAS,CAACI;YAAI;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,EAS/DrB,MAAM,CAACuB,SAAS,CAACI,GAAG,CAAC,iBAAIhC,OAAA;cAAAsB,QAAA,EAAIjB,MAAM,CAACuB,SAAS,CAACI,GAAG,CAAC,CAACC;YAAO;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAX1DL,KAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYV,CAAC;QAEd,CAAC,CAAC;MAAA,GAlBIL,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmBV,CAAC;IAEd,CAAC,CAAC;EACN,CAAC;EACD;;EAEA,oBACI1B,OAAA;IAAMM,QAAQ,EAAEF,YAAY,CAACE,QAAQ,CAAE;IAAAgB,QAAA,GAClCZ,SAAS,CAACQ,KAAK,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;MACrC,oBACIrB,OAAA;QAAAsB,QAAA,gBACItB,OAAA;UAAAsB,QAAA,EAAKF,OAAO,CAACA;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACzBN,OAAO,CAACO,UAAU,CAACR,GAAG,CAAC,CAACS,SAAS,EAAEP,KAAK,KAAK;UAC1C,oBACIrB,OAAA;YAAAsB,QAAA,gBACItB,OAAA;cAAAsB,QAAA,EAAQM,SAAS,CAACC;YAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC/BE,SAAS,CAACE,IAAI,KAAK,SAAS,iBAAI9B,OAAA;cAAO+B,IAAI,EAAEH,SAAS,CAACI;YAAI;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAC9DE,SAAS,CAACE,IAAI,KAAK,OAAO,IAAIF,SAAS,CAACM,OAAO,CAACf,GAAG,CAAC,CAACgB,MAAM,EAAEd,KAAK,KAAK;cACpE,oBACIrB,OAAA;gBAAAsB,QAAA,gBACItB,OAAA;kBAAO8B,IAAI,EAAC,OAAO;kBAACC,IAAI,EAAEH,SAAS,CAACI,GAAI;kBAACnB,KAAK,EAAEsB,MAAM,CAACtB;gBAAM;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAChE1B,OAAA;kBAAAsB,QAAA,EAAQa,MAAM,CAACN;gBAAK;kBAAAN,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,GAFvBL,KAAK;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGV,CAAC;YAEd,CAAC,CAAC;UAAA,GAVIL,KAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYV,CAAC;QAEd,CAAC,CAAC;MAAA,GAlBIL,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmBV,CAAC;IAEd,CACA,CAAC,eACD1B,OAAA;MAAO8B,IAAI,EAAC;IAAQ;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEf;AAACxB,EAAA,CA/JuBD,GAAG;EAAA,QACoBH,OAAO;AAAA;AAAAsC,EAAA,GAD9BnC,GAAG;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}