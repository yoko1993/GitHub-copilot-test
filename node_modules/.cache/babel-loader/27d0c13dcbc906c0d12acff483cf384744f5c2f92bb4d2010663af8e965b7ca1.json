{"ast":null,"code":"var _jsxFileName = \"/Users/yoko/GitHub-copilot-test/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport './App.css';\n\n//render form dynamically wih react hook form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    mode: 'onBlur'\n  });\n  const onSubmit = data => {\n    console.log(data);\n    alert('Form submit suceess!');\n  };\n  const tableData = {\n    \"modal\": [{\n      \"section\": \"Beneficiary Name and Country\",\n      \"order\": 1,\n      \"components\": [{\n        \"key\": \"name\",\n        \"type\": \"textbox\",\n        \"label\": \"Beneficiary name\",\n        \"order\": 1,\n        \"rule\": {\n          \"required\": true,\n          \"maxLength\": 10\n        }\n      }, {\n        \"key\": \"country\",\n        \"type\": \"textbox\",\n        \"label\": \"Beneficiary Country\",\n        \"order\": 2,\n        \"rule\": {\n          \"required\": true,\n          \"maxLength\": 10\n        }\n      }]\n    }, {\n      \"section\": \"Mode of Receiving Payment\",\n      \"order\": 2,\n      \"components\": [{\n        \"key\": \"mode\",\n        \"type\": \"radio\",\n        \"label\": \"Mode of Payment\",\n        \"options\": [{\n          \"label\": \"Bank\",\n          \"value\": \"Bank\"\n        }, {\n          \"label\": \"other\",\n          \"value\": \"other\"\n        }],\n        \"order\": 1,\n        \"rule\": {\n          \"required\": true\n        }\n      }]\n    }, {\n      \"section\": \"Bank Account Details\",\n      \"components\": [{\n        \"key\": \"accountNum\",\n        \"type\": \"textbox\",\n        \"label\": \"Beneficiary Account Number\",\n        \"order\": 1,\n        \"rule\": {\n          \"required\": true,\n          \"maxLength\": 10\n        }\n      }, {\n        \"key\": \"bankRoutingCode\",\n        \"type\": \"textbox\",\n        \"label\": \"Beneficiary Bank Routing code\",\n        \"order\": 2,\n        \"rule\": {\n          \"required\": true,\n          \"maxLength\": 10\n        }\n      }, {\n        \"key\": \"address\",\n        \"type\": \"textbox\",\n        \"label\": \"Beneficiary Address\",\n        \"order\": 3\n      }]\n    }]\n  };\n  //validate form with react hook form\n  const validateForm = (rule, value) => {\n    if (rule && rule.required && !value) {\n      return \"This fild is required\";\n    }\n    if (rule && rule.maxLength && value.length > rule.maxLength) {\n      return 'The fild length is invalid';\n    }\n    return true;\n  };\n  //render form dynamically with tableData\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Yoko Test Github Copilot!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this), tableData.modal.map((section, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: section.section\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), section.components.map((component, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: component.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 37\n            }, this), component.type === \"textbox\" && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: component.key,\n              ...register(component.key, {\n                validate: value => validateForm(component.rule, value)\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 70\n            }, this), errors && errors[component.key] && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"red\"\n              },\n              children: errors[component.key].message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 73\n            }, this), component.type === \"radio\" && component.options.map((option, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: component.key,\n                  value: option.value,\n                  ...register(component.key, {\n                    validate: value => validateForm(component.rule, value)\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: option.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 45\n              }, this);\n            })]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this);\n        })]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: \"Submit\",\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"2/YRDximMa3vxdhPNR6BzVqbrkA=\", false, function () {\n  return [useForm];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useForm","jsxDEV","_jsxDEV","App","_s","register","handleSubmit","formState","errors","mode","onSubmit","data","console","log","alert","tableData","validateForm","rule","value","required","maxLength","length","children","fileName","_jsxFileName","lineNumber","columnNumber","modal","map","section","index","components","component","className","label","type","name","key","validate","style","color","message","options","option","_c","$RefreshReg$"],"sources":["/Users/yoko/GitHub-copilot-test/src/App.js"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport './App.css';\n\n//render form dynamically wih react hook form\n\nexport default function App() {\n    const { register, handleSubmit, formState: {errors} } = useForm({mode: 'onBlur'});\n    const onSubmit = (data) => {\n        console.log(data);\n        alert('Form submit suceess!');\n    };\n    const tableData = {\n        \"modal\": [\n          {\n            \"section\": \"Beneficiary Name and Country\",\n            \"order\": 1,\n            \"components\": [\n              {\n                \"key\": \"name\",\n                \"type\": \"textbox\",\n                \"label\": \"Beneficiary name\",\n                \"order\": 1,\n                \"rule\": {\n                  \"required\": true,\n                  \"maxLength\": 10\n                }\n              },\n              {\n                \"key\": \"country\",\n                \"type\": \"textbox\",\n                \"label\": \"Beneficiary Country\",\n                \"order\": 2,\n                \"rule\": {\n                  \"required\": true,\n                  \"maxLength\": 10\n                }\n              }\n            ]\n          },\n          {\n            \"section\": \"Mode of Receiving Payment\",\n            \"order\": 2,\n            \"components\": [\n              {\n                \"key\": \"mode\",\n                \"type\": \"radio\",\n                \"label\": \"Mode of Payment\",\n                \"options\": [\n                  {\n                    \"label\": \"Bank\",\n                    \"value\": \"Bank\"\n                  },\n                  {\n                    \"label\": \"other\",\n                    \"value\": \"other\"\n                  }\n                ],\n                \"order\": 1,\n                \"rule\": {\n                  \"required\": true\n                }\n              }\n            ]\n          },\n          {\n            \"section\": \"Bank Account Details\",\n            \"components\": [\n              {\n                \"key\": \"accountNum\",\n                \"type\": \"textbox\",\n                \"label\": \"Beneficiary Account Number\",\n                \"order\": 1,\n                \"rule\": {\n                  \"required\": true,\n                  \"maxLength\": 10\n                }\n              },\n              {\n                \"key\": \"bankRoutingCode\",\n                \"type\": \"textbox\",\n                \"label\": \"Beneficiary Bank Routing code\",\n                \"order\": 2,\n                \"rule\": {\n                  \"required\": true,\n                  \"maxLength\": 10\n                }\n              },\n              {\n                \"key\": \"address\",\n                \"type\": \"textbox\",\n                \"label\": \"Beneficiary Address\",\n                \"order\": 3\n              }\n            ]\n          }\n        ]\n      };\n    //validate form with react hook form\n    const validateForm = (rule, value) => {\n        if (rule && rule.required && !value) {\n            return \"This fild is required\";\n        }\n        if (rule && rule.maxLength && value.length > rule.maxLength) {\n            return 'The fild length is invalid';\n        }\n        return true;\n    }\n    //render form dynamically with tableData\n\n    return (    \n      <form onSubmit={handleSubmit(onSubmit)}>\n          <h1>Yoko Test Github Copilot!</h1>\n            {tableData.modal.map((section, index) => {\n                return (\n                    <div key={index}>\n                        <h2>{section.section}</h2>\n                        {section.components.map((component, index) => {\n                            return (\n                                <div key={index} className='item'>\n                                    <label>{component.label}</label>\n                                    {component.type === \"textbox\" && <input type=\"text\" name={component.key} {...register(component.key, { validate: (value) => validateForm(component.rule, value) })} />}\n                                    {errors && errors[component.key] && <p style={{color: \"red\"}}>{errors[component.key].message}</p>}\n                                    {component.type === \"radio\" && component.options.map((option, index) => {\n                                        return (\n                                            <div key={index}>\n                                                <input type=\"radio\" name={component.key} value={option.value} {...register(component.key, { validate: (value) => validateForm(component.rule, value) })}/>\n                                                <label>{option.label}</label>\n                                            </div>\n                                        )\n                                    })}\n                                </div>\n                            )\n                        })}\n                    </div>\n                )\n            }\n            )}\n            <input value=\"Submit\" type=\"submit\" />\n        </form>\n    );\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAO,WAAW;;AAElB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM;IAAEC,QAAQ;IAAEC,YAAY;IAAEC,SAAS,EAAE;MAACC;IAAM;EAAE,CAAC,GAAGR,OAAO,CAAC;IAACS,IAAI,EAAE;EAAQ,CAAC,CAAC;EACjF,MAAMC,QAAQ,GAAIC,IAAI,IAAK;IACvBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBG,KAAK,CAAC,sBAAsB,CAAC;EACjC,CAAC;EACD,MAAMC,SAAS,GAAG;IACd,OAAO,EAAE,CACP;MACE,SAAS,EAAE,8BAA8B;MACzC,OAAO,EAAE,CAAC;MACV,YAAY,EAAE,CACZ;QACE,KAAK,EAAE,MAAM;QACb,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,kBAAkB;QAC3B,OAAO,EAAE,CAAC;QACV,MAAM,EAAE;UACN,UAAU,EAAE,IAAI;UAChB,WAAW,EAAE;QACf;MACF,CAAC,EACD;QACE,KAAK,EAAE,SAAS;QAChB,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,qBAAqB;QAC9B,OAAO,EAAE,CAAC;QACV,MAAM,EAAE;UACN,UAAU,EAAE,IAAI;UAChB,WAAW,EAAE;QACf;MACF,CAAC;IAEL,CAAC,EACD;MACE,SAAS,EAAE,2BAA2B;MACtC,OAAO,EAAE,CAAC;MACV,YAAY,EAAE,CACZ;QACE,KAAK,EAAE,MAAM;QACb,MAAM,EAAE,OAAO;QACf,OAAO,EAAE,iBAAiB;QAC1B,SAAS,EAAE,CACT;UACE,OAAO,EAAE,MAAM;UACf,OAAO,EAAE;QACX,CAAC,EACD;UACE,OAAO,EAAE,OAAO;UAChB,OAAO,EAAE;QACX,CAAC,CACF;QACD,OAAO,EAAE,CAAC;QACV,MAAM,EAAE;UACN,UAAU,EAAE;QACd;MACF,CAAC;IAEL,CAAC,EACD;MACE,SAAS,EAAE,sBAAsB;MACjC,YAAY,EAAE,CACZ;QACE,KAAK,EAAE,YAAY;QACnB,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,4BAA4B;QACrC,OAAO,EAAE,CAAC;QACV,MAAM,EAAE;UACN,UAAU,EAAE,IAAI;UAChB,WAAW,EAAE;QACf;MACF,CAAC,EACD;QACE,KAAK,EAAE,iBAAiB;QACxB,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,+BAA+B;QACxC,OAAO,EAAE,CAAC;QACV,MAAM,EAAE;UACN,UAAU,EAAE,IAAI;UAChB,WAAW,EAAE;QACf;MACF,CAAC,EACD;QACE,KAAK,EAAE,SAAS;QAChB,MAAM,EAAE,SAAS;QACjB,OAAO,EAAE,qBAAqB;QAC9B,OAAO,EAAE;MACX,CAAC;IAEL,CAAC;EAEL,CAAC;EACH;EACA,MAAMC,YAAY,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IAClC,IAAID,IAAI,IAAIA,IAAI,CAACE,QAAQ,IAAI,CAACD,KAAK,EAAE;MACjC,OAAO,uBAAuB;IAClC;IACA,IAAID,IAAI,IAAIA,IAAI,CAACG,SAAS,IAAIF,KAAK,CAACG,MAAM,GAAGJ,IAAI,CAACG,SAAS,EAAE;MACzD,OAAO,4BAA4B;IACvC;IACA,OAAO,IAAI;EACf,CAAC;EACD;;EAEA,oBACElB,OAAA;IAAMQ,QAAQ,EAAEJ,YAAY,CAACI,QAAQ,CAAE;IAAAY,QAAA,gBACnCpB,OAAA;MAAAoB,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/BX,SAAS,CAACY,KAAK,CAACC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;MACrC,oBACI5B,OAAA;QAAAoB,QAAA,gBACIpB,OAAA;UAAAoB,QAAA,EAAKO,OAAO,CAACA;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACzBG,OAAO,CAACE,UAAU,CAACH,GAAG,CAAC,CAACI,SAAS,EAAEF,KAAK,KAAK;UAC1C,oBACI5B,OAAA;YAAiB+B,SAAS,EAAC,MAAM;YAAAX,QAAA,gBAC7BpB,OAAA;cAAAoB,QAAA,EAAQU,SAAS,CAACE;YAAK;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC/BM,SAAS,CAACG,IAAI,KAAK,SAAS,iBAAIjC,OAAA;cAAOiC,IAAI,EAAC,MAAM;cAACC,IAAI,EAAEJ,SAAS,CAACK,GAAI;cAAA,GAAKhC,QAAQ,CAAC2B,SAAS,CAACK,GAAG,EAAE;gBAAEC,QAAQ,EAAGpB,KAAK,IAAKF,YAAY,CAACgB,SAAS,CAACf,IAAI,EAAEC,KAAK;cAAE,CAAC;YAAC;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,EACrKlB,MAAM,IAAIA,MAAM,CAACwB,SAAS,CAACK,GAAG,CAAC,iBAAInC,OAAA;cAAGqC,KAAK,EAAE;gBAACC,KAAK,EAAE;cAAK,CAAE;cAAAlB,QAAA,EAAEd,MAAM,CAACwB,SAAS,CAACK,GAAG,CAAC,CAACI;YAAO;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAChGM,SAAS,CAACG,IAAI,KAAK,OAAO,IAAIH,SAAS,CAACU,OAAO,CAACd,GAAG,CAAC,CAACe,MAAM,EAAEb,KAAK,KAAK;cACpE,oBACI5B,OAAA;gBAAAoB,QAAA,gBACIpB,OAAA;kBAAOiC,IAAI,EAAC,OAAO;kBAACC,IAAI,EAAEJ,SAAS,CAACK,GAAI;kBAACnB,KAAK,EAAEyB,MAAM,CAACzB,KAAM;kBAAA,GAAKb,QAAQ,CAAC2B,SAAS,CAACK,GAAG,EAAE;oBAAEC,QAAQ,EAAGpB,KAAK,IAAKF,YAAY,CAACgB,SAAS,CAACf,IAAI,EAAEC,KAAK;kBAAE,CAAC;gBAAC;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAC1JxB,OAAA;kBAAAoB,QAAA,EAAQqB,MAAM,CAACT;gBAAK;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,GAFvBI,KAAK;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAGV,CAAC;YAEd,CAAC,CAAC;UAAA,GAXII,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYV,CAAC;QAEd,CAAC,CAAC;MAAA,GAlBII,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmBV,CAAC;IAEd,CACA,CAAC,eACDxB,OAAA;MAAOgB,KAAK,EAAC,QAAQ;MAACiB,IAAI,EAAC;IAAQ;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEf;AAACtB,EAAA,CAvIuBD,GAAG;EAAA,QACiCH,OAAO;AAAA;AAAA4C,EAAA,GAD3CzC,GAAG;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}